# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose

services:
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - ./db/seed-db.sql:/docker-entrypoint-initdb.d/seed-db.sql
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 30s
      timeout: 5s
      retries: 5
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=pgadmin@localhost.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin
    ports:
      - "5050:80"
    restart: always
volumes:
  db-data: